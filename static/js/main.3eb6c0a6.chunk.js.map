{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","getRandomName","value","now","toString","slice","this","window","setInterval","newDate","setState","console","info","toUTCString","prevProps","clockName","props","debug","clearInterval","className","React","Component","App","hasClock","handleLeftClick","e","preventDefault","handleContextMenu","newName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,EA8BEC,cAAgB,WACd,IAAMC,EAAQH,KAAKI,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,IAjCpB,uDAOE,WAA2B,IAAD,OACxBI,KAAKN,QAAUO,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIV,KAEpB,EAAKW,SAAS,CACZZ,MAAOW,IAGTE,QAAQC,KAAKH,EAAQI,cAAcR,OAAO,IAAK,MAC9C,OAhBP,gCAmBE,SAAmBS,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCJ,QAAQM,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAtBzE,kCA0BE,WACER,OAAOW,cAAcZ,KAAKN,WA3B9B,oBAoCE,WACE,IAAQF,EAAUQ,KAAKT,MAAfC,MACAiB,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGrB,EAAMe,cAAcR,OAAO,IAAK,YAjD3C,GAA2Be,IAAMC,WCDpBC,EAAb,4MACEzB,MAAe,CACbkB,UAAW,UACXQ,UAAU,GAHd,EAMEvB,QAAU,EANZ,EA4BEC,cAAgB,WACd,IAAMC,EAAQH,KAAKI,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,IA/BpB,EAkCEsB,gBAAkB,SAACC,GACjBA,EAAEC,iBAEF,EAAKhB,SAAS,CAAEa,UAAU,KArC9B,EAwCEI,kBAAoB,SAACF,GACnBA,EAAEC,iBAEF,EAAKhB,SAAS,CAAEa,UAAU,KA3C9B,uDAQE,WAA2B,IAAD,OACxBjB,KAAKN,QAAUO,OAAOC,aAAY,WAChC,IAAMoB,EAAU,EAAK3B,gBAErB,EAAKS,SAAS,CACZK,UAAWa,MAEZ,MAEHC,SAASC,iBAAiB,cAAexB,KAAKqB,mBAC9CE,SAASC,iBAAiB,QAASxB,KAAKkB,mBAlB5C,kCAqBE,WACEjB,OAAOW,cAAcZ,KAAKN,SAE1B6B,SAASE,oBAAoB,cAAezB,KAAKqB,mBACjDE,SAASE,oBAAoB,QAASzB,KAAKkB,mBAzB/C,oBA8CE,WACE,MAAgClB,KAAKT,MAA7BkB,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GAAY,cAAC,EAAD,CAAOR,UAAWA,WArDvC,GAAyBK,IAAMC,WCN/BW,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.3eb6c0a6.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: string,\n}\n\ninterface State {\n  today: Date,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      this.setState({\n        today: newDate,\n      });\n      // eslint-disable-next-line no-console\n      console.info(newDate.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render(): React.ReactNode {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newName = this.getRandomName();\n\n      this.setState({\n        clockName: newName,\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  handleLeftClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}